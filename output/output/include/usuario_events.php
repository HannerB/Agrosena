<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_usuario  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["AfterAdd"]=true;

		$this->events["BeforeProcessList"]=true;

		$this->events["AfterDelete"]=true;


	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record added
function AfterAdd(&$values, &$keys, $inline, $pageObject)
{

		$id_usuario = $values['id_usuario'];

// Realizar la consulta en la tabla usuario
$rs1 = DB::Query("SELECT * FROM usuario WHERE id_usuario='$id_usuario'");
if (!$rs1) {
    echo "Error en la consulta de usuarios.";
    return false;
}

$data1 = $rs1->fetchAssoc();
if (!$data1) {
    echo "No se encontró ningún usuario con el ID proporcionado.";
    return false;
}

// Extraer datos necesarios de la tabla usuario
$id_usuario = $data1['id_usuario'];
$id_evaluador = $data1['idevaluador'];
$nom_usuario = $data1['nomusuario'];

// Insertar el registro en la tabla evaluador
$insert2 = DB::Query("INSERT INTO evaluador (idevaluador, nombreevaluador, idusuario)
                      VALUES ('$id_evaluador', '$nom_usuario', '$id_usuario')");
if (!$insert2) {
    echo "Error al insertar en la tabla evaluador.";
    return false;
}


// Redirigir si la inserción fue exitosa
header("Location: evaluador_list.php");
exit();

return true;

;		
} // function AfterAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

				// List page: Before process
function BeforeProcessList($pageObject)
{

		
// Place event code here.
// Use "Add Action" button to add code snippets.
;		
} // function BeforeProcessList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record deleted
function AfterDelete($where, &$deleted_values, &$message, $pageObject)
{

		
    // Obtener el ID del registro eliminado de la tabla 'usuario'
    $idUsuario = $deleted_values['id_usuario']; // Asegúrate de que 'id_usuario' es la clave primaria en la tabla 'usuario'

    // Comenzar la transacción utilizando los métodos de PHPRunner
    DB::Exec("START TRANSACTION");

    try {
        // Eliminar registros en la tabla 'evaluador' donde 'idusuario' coincida con el ID eliminado
        $sqlEvaluador = "DELETE FROM evaluador WHERE idusuario = $idUsuario";
        $resultEvaluador = DB::Query($sqlEvaluador);
        if (!$resultEvaluador) {
            throw new Exception("Error al eliminar registros en 'evaluador'.");
        }

        // Confirmar transacción
        DB::Exec("COMMIT");

        // Mensaje de confirmación
        $message = "Registros eliminados correctamente en 'usuario' y 'evaluador'.";
    } catch (Exception $e) {
        // Revertir transacción en caso de error
        DB::Exec("ROLLBACK");
        $message = $e->getMessage();
    }



// Place event code here.
// Use "Add Action" button to add code snippets.
;		
} // function AfterDelete

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>
